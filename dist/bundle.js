(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Checklist"] = factory();
	else
		root["Checklist"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js?!./src/index.css":
/*!*********************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/postcss-loader/src??ref--5-2!./src/index.css ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".cdx-checklist__item {\\n        display: flex;\\n        box-sizing: content-box;\\n    }\\n\\n        .cdx-checklist__item-text {\\n            outline: none;\\n            flex-grow: 1;\\n            padding: 5px 0;\\n        }\\n\\n        .cdx-checklist__item-checkbox {\\n            display: inline-block;\\n            flex-shrink: 0;\\n            position: relative;\\n            width: 20px;\\n            height: 20px;\\n            margin:  5px;\\n            margin-left: 0;\\n            margin-right: 7px;\\n            border-radius: 50%;\\n            border: 1px solid #d0d0d0;\\n            background: #fff;\\n            cursor: pointer;\\n            user-select: none;\\n        }\\n\\n        .cdx-checklist__item-checkbox:hover {\\n                border-color: #b5b5b5;\\n            }\\n\\n        .cdx-checklist__item-checkbox::after {\\n                position: absolute;\\n                top: 6px;\\n                left: 5px;\\n                width: 9px;\\n                height: 4px;\\n                border: 2px solid #fff;\\n                border-top: none;\\n                border-right: none;\\n                background: transparent;\\n                content: '';\\n                opacity: 0;\\n                transform: rotate(-45deg);\\n            }\\n\\n        .cdx-checklist__item--checked .cdx-checklist__item-checkbox {\\n                background: #388ae5;\\n                border-color: #388ae5;\\n            }\\n\\n        .cdx-checklist__item--checked .cdx-checklist__item-checkbox:hover {\\n                    background: #307cd1;\\n                }\\n\\n        .cdx-checklist__item--checked .cdx-checklist__item-checkbox::after {\\n                    opacity: 1;\\n                }\\n\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack://Checklist/./src/index.css?./node_modules/css-loader!./node_modules/postcss-loader/src??ref--5-2");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n//# sourceURL=webpack://Checklist/./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack://Checklist/./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack://Checklist/./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../node_modules/css-loader!../node_modules/postcss-loader/src??ref--5-2!./index.css */ \"./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js?!./src/index.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://Checklist/./src/index.css?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Checklist; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ \"./src/index.css\");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _polyfills_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./polyfills.js */ \"./src/polyfills.js\");\n/* harmony import */ var _polyfills_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_polyfills_js__WEBPACK_IMPORTED_MODULE_2__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Build styles\n */\n\n\n/**\n * Require polyfills\n */\n\n\n/**\n * @typedef {object} ChecklistData\n * @property {ChecklistItem[]} items - checklist elements\n */\n\n/**\n * @typedef {object} ChecklistItem\n * @property {string} text - item label\n * @property {boolean} checked - is the item checked\n */\n\n/**\n * Checklist Tool for the Editor.js 2.0\n */\n\nvar Checklist = /*#__PURE__*/function () {\n  _createClass(Checklist, null, [{\n    key: \"isReadOnlySupported\",\n\n    /**\n     * Notify core that read-only mode is supported\n     *\n     * @returns {boolean}\n     */\n    get: function get() {\n      return true;\n    }\n    /**\n     * Allow to use native Enter behaviour\n     *\n     * @returns {boolean}\n     * @public\n     */\n\n  }, {\n    key: \"enableLineBreaks\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * Get Tool toolbox settings\n     * icon - Tool icon's SVG\n     * title - title to show in toolbox\n     *\n     * @returns {{icon: string, title: string}}\n     */\n\n  }, {\n    key: \"toolbox\",\n    get: function get() {\n      return {\n        icon: '<svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.5 15a7.5 7.5 0 1 1 0-15 7.5 7.5 0 0 1 0 15zm0-2.394a5.106 5.106 0 1 0 0-10.212 5.106 5.106 0 0 0 0 10.212zm-.675-4.665l2.708-2.708 1.392 1.392-2.708 2.708-1.392 1.391-2.971-2.971L5.245 6.36l1.58 1.58z\"/></svg>',\n        title: \"Checklist\"\n      };\n    }\n    /**\n     * Allow Checkbox Tool to be converted to/from other block\n     *\n     * @returns {{export: Function, import: Function}}\n     */\n\n  }, {\n    key: \"conversionConfig\",\n    get: function get() {\n      return {\n        /**\n         * To create exported string from the checkbox, concatenate items by dot-symbol.\n         *\n         * @param {ChecklistData} data - checklist data to create a string from that\n         * @returns {string}\n         */\n        \"export\": function _export(data) {\n          return data.items.map(function (_ref) {\n            var text = _ref.text;\n            return text;\n          }).join(\". \");\n        },\n\n        /**\n         * To create a checklist from other block's string, just put it at the first item\n         *\n         * @param {string} string - string to create list tool data from that\n         * @returns {ChecklistData}\n         */\n        \"import\": function _import(string) {\n          return {\n            items: [{\n              text: string,\n              checked: false\n            }]\n          };\n        }\n      };\n    }\n    /**\n     * Sanitizer rules\n     */\n\n  }, {\n    key: \"sanitize\",\n    get: function get() {\n      return {\n        text: {\n          br: true,\n          span: true,\n          \"obx-entity\": true\n        }\n      };\n    }\n    /**\n     * Render plugin`s main Element and fill it with saved data\n     *\n     * @param {object} options - block constructor options\n     * @param {ChecklistData} options.data - previously saved data\n     * @param {object} options.config - user config for Tool\n     * @param {object} options.api - Editor.js API\n     * @param {boolean} options.readOnly - read only mode flag\n     */\n\n  }]);\n\n  function Checklist(_ref2) {\n    var data = _ref2.data,\n        config = _ref2.config,\n        api = _ref2.api,\n        readOnly = _ref2.readOnly;\n\n    _classCallCheck(this, Checklist);\n\n    /**\n     * HTML nodes\n     *\n     * @private\n     */\n    this._elements = {\n      wrapper: null,\n      items: []\n    };\n    this.readOnly = readOnly;\n    this.api = api;\n    /**\n     * Fill or create tool's data structure\n     */\n\n    this.data = data || {};\n    this._id = data.id;\n  }\n  /**\n   * Returns checklist tag with items\n   *\n   * @returns {Element}\n   */\n\n\n  _createClass(Checklist, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      this._elements.wrapper = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"make\"])(\"div\", [this.CSS.baseBlock, this.CSS.wrapper], {\n        id: this._id\n      });\n      /**\n       * If there is no data, create first empty item\n       */\n\n      if (!this.data.items) {\n        this.data.items = [{\n          text: \"\",\n          checked: false\n        }];\n      }\n\n      this.data.items.forEach(function (item) {\n        var newItem = _this.createChecklistItem(item);\n\n        _this._elements.wrapper.appendChild(newItem);\n      });\n      /**\n       * If read-only mode is on, do not bind events\n       */\n\n      if (this.readOnly) {\n        return this._elements.wrapper;\n      }\n      /**\n       * Add event-listeners\n       */\n\n\n      this._elements.wrapper.addEventListener(\"keydown\", function (event) {\n        var ENTER = 13,\n            BACKSPACE = 8; // key codes\n\n        switch (event.keyCode) {\n          case ENTER:\n            _this.enterPressed(event);\n\n            break;\n\n          case BACKSPACE:\n            _this.backspace(event);\n\n            break;\n        }\n      }, false);\n\n      this._elements.wrapper.addEventListener(\"click\", function (event) {\n        _this.toggleCheckbox(event);\n      });\n\n      return this._elements.wrapper;\n    }\n    /**\n     * Return Checklist data\n     *\n     * @returns {ChecklistData}\n     */\n\n  }, {\n    key: \"save\",\n    value: function save() {\n      var _this2 = this;\n\n      /**\n       * @type {ChecklistItem[]}\n       */\n      var items = this.items.map(function (itemEl) {\n        var input = _this2.getItemInput(itemEl);\n\n        return {\n          text: Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getHTML\"])(input),\n          checked: itemEl.classList.contains(_this2.CSS.itemChecked)\n        };\n      });\n      /**\n       * Skip empty items\n       */\n\n      items = items.filter(function (item) {\n        return item.text.trim().length !== 0;\n      });\n      return {\n        id: this._id,\n        items: items\n      };\n    }\n    /**\n     * Validate data: check if Checklist has items\n     *\n     * @param {ChecklistData} savedData — data received after saving\n     * @returns {boolean} false if saved data is not correct, otherwise true\n     * @public\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(savedData) {\n      return !!savedData.items.length;\n    }\n    /**\n     * Toggle checklist item state\n     *\n     * @param {MouseEvent} event - click\n     * @returns {void}\n     */\n\n  }, {\n    key: \"toggleCheckbox\",\n    value: function toggleCheckbox(event) {\n      var checkListItem = event.target.closest(\".\".concat(this.CSS.item));\n      var checkbox = checkListItem.querySelector(\".\".concat(this.CSS.checkbox));\n\n      if (checkbox.contains(event.target)) {\n        checkListItem.classList.toggle(this.CSS.itemChecked);\n      }\n    }\n    /**\n     * Create Checklist items\n     *\n     * @param {ChecklistItem} item - data.item\n     * @returns {Element} checkListItem - new element of checklist\n     */\n\n  }, {\n    key: \"createChecklistItem\",\n    value: function createChecklistItem() {\n      var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var checkListItem = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"make\"])(\"div\", this.CSS.item);\n      var checkbox = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"make\"])(\"span\", this.CSS.checkbox);\n      var textField = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"make\"])(\"div\", this.CSS.textField, {\n        innerHTML: item.text ? item.text : \"\",\n        contentEditable: !this.readOnly\n      });\n\n      if (item.checked) {\n        checkListItem.classList.add(this.CSS.itemChecked);\n      }\n\n      checkListItem.appendChild(checkbox);\n      checkListItem.appendChild(textField);\n      return checkListItem;\n    }\n    /**\n     * Append new elements to the list by pressing Enter\n     *\n     * @param {KeyboardEvent} event - keyboard event\n     */\n\n  }, {\n    key: \"enterPressed\",\n    value: function enterPressed(event) {\n      event.preventDefault();\n      var items = this.items;\n      var currentItem = document.activeElement.closest(\".\".concat(this.CSS.item));\n      var currentItemIndex = items.indexOf(currentItem);\n      var isLastItem = currentItemIndex === items.length - 1;\n      /**\n       * Prevent checklist item generation if it's the last item and it's empty\n       * and get out of checklist\n       */\n\n      if (isLastItem) {\n        var currentItemText = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getHTML\"])(this.getItemInput(currentItem));\n        var isEmptyItem = currentItemText.length === 0;\n\n        if (isEmptyItem) {\n          var currentBlockIndex = this.api.blocks.getCurrentBlockIndex();\n          currentItem.remove();\n          this.api.blocks.insert();\n          this.api.caret.setToBlock(currentBlockIndex + 1);\n          return;\n        }\n      }\n      /**\n       * Cut content after caret\n       */\n\n\n      var fragmentAfterCaret = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"extractContentAfterCaret\"])();\n      var htmlAfterCaret = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"fragmentToHtml\"])(fragmentAfterCaret);\n      /**\n       * Create new checklist item\n       */\n\n      var newItem = this.createChecklistItem({\n        text: htmlAfterCaret,\n        checked: false\n      });\n      /**\n       * Insert new checklist item as sibling to currently selected item\n       */\n\n      this._elements.wrapper.insertBefore(newItem, currentItem.nextSibling);\n      /**\n       * Move caret to contentEditable textField of new checklist item\n       */\n\n\n      Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"moveCaret\"])(this.getItemInput(newItem), true);\n    }\n    /**\n     * Handle backspace\n     *\n     * @param {KeyboardEvent} event - keyboard event\n     */\n\n  }, {\n    key: \"backspace\",\n    value: function backspace(event) {\n      var currentItem = event.target.closest(\".\".concat(this.CSS.item));\n      var currentIndex = this.items.indexOf(currentItem);\n      var prevItem = this.items[currentIndex - 1];\n\n      if (!prevItem) {\n        return;\n      }\n\n      var selection = window.getSelection();\n      var caretAtTheBeginning = selection.focusOffset === 0;\n\n      if (!caretAtTheBeginning) {\n        return;\n      }\n\n      event.preventDefault();\n      /**\n       * Append content after caret to the previous item\n       * and remove the current one\n       */\n\n      var fragmentAfterCaret = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"extractContentAfterCaret\"])();\n      var prevItemInput = this.getItemInput(prevItem);\n      var prevItemChildNodesLength = prevItemInput.childNodes.length;\n      prevItemInput.appendChild(fragmentAfterCaret);\n      Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"moveCaret\"])(prevItemInput, undefined, prevItemChildNodesLength);\n      currentItem.remove();\n    }\n    /**\n     * Styles\n     *\n     * @private\n     * @returns {object<string>}\n     */\n\n  }, {\n    key: \"getItemInput\",\n\n    /**\n     * Find and return item's content editable element\n     *\n     * @private\n     * @param {Element} el - item wrapper\n     * @returns {Element}\n     */\n    value: function getItemInput(el) {\n      return el.querySelector(\".\".concat(this.CSS.textField));\n    }\n  }, {\n    key: \"CSS\",\n    get: function get() {\n      return {\n        baseBlock: this.api.styles.block,\n        wrapper: \"cdx-checklist\",\n        item: \"cdx-checklist__item\",\n        itemChecked: \"cdx-checklist__item--checked\",\n        checkbox: \"cdx-checklist__item-checkbox\",\n        textField: \"cdx-checklist__item-text\"\n      };\n    }\n    /**\n     * Return all items elements\n     *\n     * @returns {Element[]}\n     */\n\n  }, {\n    key: \"items\",\n    get: function get() {\n      return Array.from(this._elements.wrapper.querySelectorAll(\".\".concat(this.CSS.item)));\n    }\n  }]);\n\n  return Checklist;\n}();\n\n\n\n//# sourceURL=webpack://Checklist/./src/index.js?");

/***/ }),

/***/ "./src/polyfills.js":
/*!**************************!*\
  !*** ./src/polyfills.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    var el = this;\n    if (!document.documentElement.contains(el)) return null;\n\n    do {\n      if (el.matches(s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n\n//# sourceURL=webpack://Checklist/./src/polyfills.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! exports provided: extractContentAfterCaret, fragmentToHtml, make, getHTML, moveCaret */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"extractContentAfterCaret\", function() { return extractContentAfterCaret; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fragmentToHtml\", function() { return fragmentToHtml; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"make\", function() { return make; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHTML\", function() { return getHTML; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"moveCaret\", function() { return moveCaret; });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Remove and return HTML content after carer position in current input\n *\n * @returns {DocumentFragment} extracted HTML nodes\n */\nfunction extractContentAfterCaret() {\n  var input = document.activeElement;\n  var selection = window.getSelection();\n  var selectRange = selection.getRangeAt(0);\n  var range = selectRange.cloneRange();\n  range.selectNodeContents(input);\n  range.setStart(selectRange.endContainer, selectRange.endOffset);\n  return range.extractContents();\n}\n/**\n * Converts DocumentFragment to HTML code string\n *\n * @param {DocumentFragment} fragment - what to convert\n * @returns {string}\n */\n\nfunction fragmentToHtml(fragment) {\n  var tmpDiv = document.createElement('div');\n  tmpDiv.appendChild(fragment);\n  return tmpDiv.innerHTML;\n}\n/**\n * Helper for making Elements with attributes\n *\n * @param  {string} tagName           - new Element tag name\n * @param  {Array|string} classNames  - list or name of CSS classname(s)\n * @param  {object} attributes        - any attributes\n * @returns {Element}\n */\n\nfunction make(tagName) {\n  var classNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var el = document.createElement(tagName);\n\n  if (Array.isArray(classNames)) {\n    var _el$classList;\n\n    (_el$classList = el.classList).add.apply(_el$classList, _toConsumableArray(classNames));\n  } else if (classNames) {\n    el.classList.add(classNames);\n  }\n\n  for (var attrName in attributes) {\n    el[attrName] = attributes[attrName];\n  }\n\n  return el;\n}\n/**\n * Returns element's HTML content\n * with simple sanitizing\n *\n * @param {Element} el - content editable element\n * @returns {string}\n */\n\nfunction getHTML(el) {\n  return el.innerHTML.replace('<br>', ' ').trim();\n}\n/**\n * Moves caret to the end of contentEditable element\n *\n * @param {Element} element - contentEditable element\n * @param {boolean} toStart - pass true to move caret to start. Otherwise will it be moved to the end\n * @param {number} offset - range start offset.\n *                          If element is Text, offset is a chars count.\n *                          If element is an Element, offset is a childNode index\n *                          {@see https://developer.mozilla.org/en-US/docs/Web/API/Range/setStart}\n *\n * @returns {void}\n */\n\nfunction moveCaret(element) {\n  var toStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var range = document.createRange();\n  var selection = window.getSelection();\n  range.selectNodeContents(element);\n\n  if (offset !== undefined) {\n    range.setStart(element, offset);\n    range.setEnd(element, offset);\n  }\n\n  range.collapse(toStart);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n\n//# sourceURL=webpack://Checklist/./src/utils.js?");

/***/ })

/******/ })["default"];
});